name: Backend CI

on:
  push:

env:
  DOCKER_BUILDKIT: "1"

jobs:
  Format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: Jerome1337/gofmt-action@v1.0.5
        with:
          gofmt-flags: '-w'

      - name: Commit changes
        uses: stefanzweifel/git-auto-commit-action@v4.16.0
        with:
            commit_message: Apply formatting changes
            branch: ${{ github.head_ref }}

  Lint:
    runs-on: ubuntu-latest
    needs: [Format]
    steps:
      - uses: actions/checkout@v3

      - name: Run lint
        run: make lint

  Unit-test:
    runs-on: ubuntu-latest
    needs: [Lint]
    steps:
      - uses: actions/checkout@v3

      - name: Start DB
        run: mkdir -m rwxrw-r-- ./logs && mkdir -m rwxrw-r-- ./logs/postgres  && make db && ./scripts/check_db_available.sh

      - name: Populate DB with test data
        run: ././scripts/populate_db.sh
        
      - name: Run unit tests
        run: make unit-test

      - name: Get coverage
        run: make print-coverage

  Deploy:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: [Lint, Unit-test]
    steps:
      - uses: actions/checkout@v3

      - name: Login to YC Container Registry
        id: login-cr
        uses: yc-actions/yc-cr-login@v1
        with:
          yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}

      - name: Build docker images
        run: make build-images

      - name: Push docker images
        run: make push-images

      - name: Pull and run on server
        uses: appleboy/ssh-action@master
        with:
          host: pickpin.ru
          username: ubuntu
          key: ${{ secrets.PRACTICALDEV_CERT }}
          script: |
            cat key.json | docker login \
            --username json_key \
            --password-stdin \
            cr.yandex

            cd 2023_Practical_Dev/backend
            git checkout main
            git pull --rebase

            make pull-images
            make deploy
            make metrics

            cd ../frontend && docker compose restart nginx
