version: "3.9"

services:
  db:
    image: postgres
    container_name: db
    restart: always
    environment:
      POSTGRES_DB: "${POSTGRES_DB}"
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
    ports:
      - "5432:5432"
    networks:
      - db_network
    deploy:
      restart_policy:
        condition: on-failure

  backend:
    build: "."
    container_name: backend
    ports:
      - 8080:8080
    env_file:
      - .env
    depends_on:
      - db
    networks:
      - nginx_network
      - db_network
    deploy:
      restart_policy:
        condition: on-failure

  docs:
    image: nginx
    container_name: docs
    volumes:
      - ./docs/index.html:/usr/share/nginx/html/index.html:ro
      - ./docs/openapi.yml:/usr/share/nginx/html/openapi.yml:ro
    ports:
      - 8081:80
    networks:
      - nginx_network
    deploy:
      restart_policy:
        condition: on-failure
  
  frontend:
    build: 
      context: https://github.com/frontend-park-mail-ru/2023_1_PracticalDev.git#setup
      dockerfile: Dockerfile.prod
    container_name: frontend
    command: npm run server
    ports:
      - 8000:8000
    networks:
      - nginx_network
    deploy:
      restart_policy:
        condition: on-failure

  nginx:
    image: nginx
    container_name: nginx
    volumes:
      - ./pickpin.conf:/etc/nginx/conf.d/default.conf
    ports:
      - 80:80
    depends_on:
      - backend
      - frontend
      - docs
    networks:
      - nginx_network
    deploy:
      restart_policy:
        condition: on-failure

networks:
  nginx_network:
    driver: bridge
  db-network:
    driver: bridge
