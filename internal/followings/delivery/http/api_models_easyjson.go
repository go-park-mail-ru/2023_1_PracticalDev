// Code generated by easyjson for marshaling/unmarshaling. DO NOT EDIT.

package http

import (
	json "encoding/json"
	followings "github.com/go-park-mail-ru/2023_1_PracticalDev/internal/followings"
	easyjson "github.com/mailru/easyjson"
	jlexer "github.com/mailru/easyjson/jlexer"
	jwriter "github.com/mailru/easyjson/jwriter"
)

// suppress unused package warning
var (
	_ *json.RawMessage
	_ *jlexer.Lexer
	_ *jwriter.Writer
	_ easyjson.Marshaler
)

func easyjsonC0ea9389DecodeGithubComGoParkMailRu20231PracticalDevInternalFollowingsDeliveryHttp(in *jlexer.Lexer, out *followersResponse) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "followers":
			if in.IsNull() {
				in.Skip()
				out.Followers = nil
			} else {
				in.Delim('[')
				if out.Followers == nil {
					if !in.IsDelim(']') {
						out.Followers = make([]followings.Follower, 0, 0)
					} else {
						out.Followers = []followings.Follower{}
					}
				} else {
					out.Followers = (out.Followers)[:0]
				}
				for !in.IsDelim(']') {
					var v1 followings.Follower
					easyjsonC0ea9389DecodeGithubComGoParkMailRu20231PracticalDevInternalFollowings(in, &v1)
					out.Followers = append(out.Followers, v1)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC0ea9389EncodeGithubComGoParkMailRu20231PracticalDevInternalFollowingsDeliveryHttp(out *jwriter.Writer, in followersResponse) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"followers\":"
		out.RawString(prefix[1:])
		if in.Followers == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v2, v3 := range in.Followers {
				if v2 > 0 {
					out.RawByte(',')
				}
				easyjsonC0ea9389EncodeGithubComGoParkMailRu20231PracticalDevInternalFollowings(out, v3)
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v followersResponse) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC0ea9389EncodeGithubComGoParkMailRu20231PracticalDevInternalFollowingsDeliveryHttp(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v followersResponse) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC0ea9389EncodeGithubComGoParkMailRu20231PracticalDevInternalFollowingsDeliveryHttp(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *followersResponse) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC0ea9389DecodeGithubComGoParkMailRu20231PracticalDevInternalFollowingsDeliveryHttp(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *followersResponse) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC0ea9389DecodeGithubComGoParkMailRu20231PracticalDevInternalFollowingsDeliveryHttp(l, v)
}
func easyjsonC0ea9389DecodeGithubComGoParkMailRu20231PracticalDevInternalFollowings(in *jlexer.Lexer, out *followings.Follower) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "id":
			out.Id = int(in.Int())
		case "username":
			out.Username = string(in.String())
		case "name":
			out.Name = string(in.String())
		case "profile_image":
			out.ProfileImage = string(in.String())
		case "website_url":
			out.WebsiteUrl = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC0ea9389EncodeGithubComGoParkMailRu20231PracticalDevInternalFollowings(out *jwriter.Writer, in followings.Follower) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix[1:])
		out.Int(int(in.Id))
	}
	{
		const prefix string = ",\"username\":"
		out.RawString(prefix)
		out.String(string(in.Username))
	}
	{
		const prefix string = ",\"name\":"
		out.RawString(prefix)
		out.String(string(in.Name))
	}
	{
		const prefix string = ",\"profile_image\":"
		out.RawString(prefix)
		out.String(string(in.ProfileImage))
	}
	{
		const prefix string = ",\"website_url\":"
		out.RawString(prefix)
		out.String(string(in.WebsiteUrl))
	}
	out.RawByte('}')
}
func easyjsonC0ea9389DecodeGithubComGoParkMailRu20231PracticalDevInternalFollowingsDeliveryHttp1(in *jlexer.Lexer, out *followeesResponse) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "followees":
			if in.IsNull() {
				in.Skip()
				out.Followees = nil
			} else {
				in.Delim('[')
				if out.Followees == nil {
					if !in.IsDelim(']') {
						out.Followees = make([]followings.Followee, 0, 0)
					} else {
						out.Followees = []followings.Followee{}
					}
				} else {
					out.Followees = (out.Followees)[:0]
				}
				for !in.IsDelim(']') {
					var v4 followings.Followee
					easyjsonC0ea9389DecodeGithubComGoParkMailRu20231PracticalDevInternalFollowings1(in, &v4)
					out.Followees = append(out.Followees, v4)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC0ea9389EncodeGithubComGoParkMailRu20231PracticalDevInternalFollowingsDeliveryHttp1(out *jwriter.Writer, in followeesResponse) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"followees\":"
		out.RawString(prefix[1:])
		if in.Followees == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v5, v6 := range in.Followees {
				if v5 > 0 {
					out.RawByte(',')
				}
				easyjsonC0ea9389EncodeGithubComGoParkMailRu20231PracticalDevInternalFollowings1(out, v6)
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v followeesResponse) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC0ea9389EncodeGithubComGoParkMailRu20231PracticalDevInternalFollowingsDeliveryHttp1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v followeesResponse) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC0ea9389EncodeGithubComGoParkMailRu20231PracticalDevInternalFollowingsDeliveryHttp1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *followeesResponse) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC0ea9389DecodeGithubComGoParkMailRu20231PracticalDevInternalFollowingsDeliveryHttp1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *followeesResponse) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC0ea9389DecodeGithubComGoParkMailRu20231PracticalDevInternalFollowingsDeliveryHttp1(l, v)
}
func easyjsonC0ea9389DecodeGithubComGoParkMailRu20231PracticalDevInternalFollowings1(in *jlexer.Lexer, out *followings.Followee) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "id":
			out.Id = int(in.Int())
		case "username":
			out.Username = string(in.String())
		case "name":
			out.Name = string(in.String())
		case "profile_image":
			out.ProfileImage = string(in.String())
		case "website_url":
			out.WebsiteUrl = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC0ea9389EncodeGithubComGoParkMailRu20231PracticalDevInternalFollowings1(out *jwriter.Writer, in followings.Followee) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix[1:])
		out.Int(int(in.Id))
	}
	{
		const prefix string = ",\"username\":"
		out.RawString(prefix)
		out.String(string(in.Username))
	}
	{
		const prefix string = ",\"name\":"
		out.RawString(prefix)
		out.String(string(in.Name))
	}
	{
		const prefix string = ",\"profile_image\":"
		out.RawString(prefix)
		out.String(string(in.ProfileImage))
	}
	{
		const prefix string = ",\"website_url\":"
		out.RawString(prefix)
		out.String(string(in.WebsiteUrl))
	}
	out.RawByte('}')
}
