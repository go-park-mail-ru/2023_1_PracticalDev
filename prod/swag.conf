upstream nginx {
    server nginx:80 max_fails=2 fail_timeout=10s;
}

# redirect all traffic to https
server {
    listen 80 default_server;
    listen [::]:80 default_server;
    server_name _;
    return 301 https://$host$request_uri;
}

server {
	listen 443 ssl;
	listen [::]:443 ssl;

	server_name short.*;

	include /config/nginx/ssl.conf;

	client_max_body_size 0;

	location / {
        	include /config/nginx/proxy.conf;
        	resolver 127.0.0.11 valid=30s;
        	set $upstream_app shortener;
        	set $upstream_port 8091;
        	set $upstream_proto http;
        	proxy_pass $upstream_proto://$upstream_app:$upstream_port;
	 }
}



server {
	listen 443 ssl;
	listen [::]:443 ssl;

	server_name grafana.*;

	include /config/nginx/ssl.conf;

	client_max_body_size 0;

	 location / {
        	include /config/nginx/proxy.conf;
        	resolver 127.0.0.11 valid=30s;
        	set $upstream_app grafana;
        	set $upstream_port 3000;
        	set $upstream_proto http;
        	proxy_pass $upstream_proto://$upstream_app:$upstream_port;
	 }
}

# main server block
server {
    listen 443 ssl http2 default_server;
    listen [::]:443 ssl http2 default_server;

    root /config/www;

    server_name pickpin.ru;

    # enable subfolder method reverse proxy confs
    include /config/nginx/proxy-confs/*.subfolder.conf;

    # all ssl related config moved to ssl.conf
    include /config/nginx/ssl.conf;

    client_max_body_size 0;

	gzip on;
    	gzip_types      text/plain application/json  application/xml  application/javascript;
	gzip_proxied    no-cache no-store private expired auth;
    	gzip_min_length 1000;

    location / {
        proxy_pass http://nginx/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
 
	proxy_set_header Accept-Encoding $http_accept_encoding;
	proxy_set_header Upgrade $http_upgrade;
    	proxy_set_header Connection "upgrade";
	proxy_read_timeout 10m;
    }
}
